syntax = "proto3";
package envoy.extensions.filters.http.ext_authz;

import "envoy/extensions/filters/http/ext_authz/v3/ext_authz.proto";
import "test/fuzz/common.proto";
import "envoy/config/core/v3/base.proto";
import "validate/validate.proto";

// We only fuzz a single request per iteration.
message ExtAuthzTestCase {
  enum AuthResult {
    // Possible results for a check call. Taken from
    // https://github.com/envoyproxy/envoy/blob/945b5833f094dee31d2971cee8d40553bb0fe714/source/extensions/filters/common/ext_authz/ext_authz.h#L65
    OK = 0;
    DENIED = 1;
    ERROR = 2;
  }

  envoy.extensions.filters.http.ext_authz.v3.ExtAuthz config = 1
      [(validate.rules).message = {required: true}];
  // HTTP request data.
  test.fuzz.HttpData request_data = 2 [(validate.rules).message = {required: true}];
  // Set default auth check result.
  AuthResult result = 3 [(validate.rules).enum.defined_only = true];
  // Filter metadata.
  envoy.config.core.v3.Metadata filter_metadata = 4;
  // TODO: Add headers and data to ExtAuthz::Response and check that the request headers and data
  // were updated.
}
