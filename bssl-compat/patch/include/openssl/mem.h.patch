--- a/include/openssl/mem.h
+++ b/include/openssl/mem.h
@@ -54,17 +54,17 @@
  * copied and put under another distribution licence
  * [including the GNU Public Licence.] */
 
-// #ifndef OPENSSL_HEADER_MEM_H
-// #define OPENSSL_HEADER_MEM_H
+#ifndef OPENSSL_HEADER_MEM_H
+#define OPENSSL_HEADER_MEM_H
 
-// #include <openssl/base.h>
+#include <openssl/base.h>
 
-// #include <stdlib.h>
-// #include <stdarg.h>
+#include <stdlib.h>
+#include <stdarg.h>
 
-// #if defined(__cplusplus)
-// extern "C" {
-// #endif
+#if defined(__cplusplus)
+extern "C" {
+#endif
 
 
 // Memory and string functions, see also buf.h.
@@ -76,16 +76,16 @@
 
 
 // OPENSSL_malloc acts like a regular |malloc|.
-// OPENSSL_EXPORT void *OPENSSL_malloc(size_t size);
+OPENSSL_EXPORT void *OPENSSL_malloc(size_t size);
 
 // OPENSSL_free does nothing if |ptr| is NULL. Otherwise it zeros out the
 // memory allocated at |ptr| and frees it.
-// OPENSSL_EXPORT void OPENSSL_free(void *ptr);
+OPENSSL_EXPORT void OPENSSL_free(void *ptr);
 
 // OPENSSL_realloc returns a pointer to a buffer of |new_size| bytes that
 // contains the contents of |ptr|. Unlike |realloc|, a new buffer is always
 // allocated and the data at |ptr| is always wiped and freed.
-// OPENSSL_EXPORT void *OPENSSL_realloc(void *ptr, size_t new_size);
+OPENSSL_EXPORT void *OPENSSL_realloc(void *ptr, size_t new_size);
 
 // OPENSSL_cleanse zeros out |len| bytes of memory at |ptr|. This is similar to
 // |memset_s| from C11.
@@ -124,8 +124,8 @@
 // #define DECIMAL_SIZE(type)	((sizeof(type)*8+2)/3+1)
 
 // BIO_snprintf has the same behavior as snprintf(3).
-// OPENSSL_EXPORT int BIO_snprintf(char *buf, size_t n, const char *format, ...)
-//     OPENSSL_PRINTF_FORMAT_FUNC(3, 4);
+OPENSSL_EXPORT int BIO_snprintf(char *buf, size_t n, const char *format, ...)
+    OPENSSL_PRINTF_FORMAT_FUNC(3, 4);
 
 // BIO_vsnprintf has the same behavior as vsnprintf(3).
 // OPENSSL_EXPORT int BIO_vsnprintf(char *buf, size_t n, const char *format,
@@ -165,20 +165,20 @@
 // OPENSSL_EXPORT void OPENSSL_clear_free(void *ptr, size_t len);
 
 
-// #if defined(__cplusplus)
-// }  // extern C
+#if defined(__cplusplus)
+}  // extern C
 
-// extern "C++" {
+extern "C++" {
 
-// BSSL_NAMESPACE_BEGIN
+BSSL_NAMESPACE_BEGIN
 
-// BORINGSSL_MAKE_DELETER(char, OPENSSL_free)
-// BORINGSSL_MAKE_DELETER(uint8_t, OPENSSL_free)
+BORINGSSL_MAKE_DELETER(char, OPENSSL_free)
+BORINGSSL_MAKE_DELETER(uint8_t, OPENSSL_free)
 
-// BSSL_NAMESPACE_END
+BSSL_NAMESPACE_END
 
-// }  // extern C++
+}  // extern C++
 
-// #endif
+#endif
 
-// #endif  // OPENSSL_HEADER_MEM_H
+#endif  // OPENSSL_HEADER_MEM_H
