--- a/include/openssl/x509v3.h
+++ b/include/openssl/x509v3.h
@@ -52,17 +52,19 @@
  * (eay@cryptsoft.com).  This product includes software written by Tim
  * Hudson (tjh@cryptsoft.com). */
 
-// #ifndef HEADER_X509V3_H
-// #define HEADER_X509V3_H
+#ifndef HEADER_X509V3_H
+#define HEADER_X509V3_H
 
-// #include <openssl/bio.h>
-// #include <openssl/conf.h>
-// #include <openssl/lhash.h>
-// #include <openssl/x509.h>
-
-// #if defined(__cplusplus)
-// extern "C" {
-// #endif
+#include <openssl/bio.h>
+#include <openssl/conf.h>
+#include <openssl/lhash.h>
+#include <openssl/x509.h>
+
+#include <ossl/openssl/x509v3.h>
+
+#if defined(__cplusplus)
+extern "C" {
+#endif
 
 
 // Legacy X.509 library.
@@ -219,12 +221,13 @@
 //     ASN1_TYPE *other;       // x400Address
 //   } d;
 // } GENERAL_NAME;
+typedef struct ossl_GENERAL_NAME_st GENERAL_NAME;
 
-// DEFINE_STACK_OF(GENERAL_NAME)
+DEFINE_STACK_OF(GENERAL_NAME)
 
-// typedef STACK_OF(GENERAL_NAME) GENERAL_NAMES;
+typedef STACK_OF(GENERAL_NAME) GENERAL_NAMES;
 
-// DEFINE_STACK_OF(GENERAL_NAMES)
+DEFINE_STACK_OF(GENERAL_NAMES)
 
 // typedef struct ACCESS_DESCRIPTION_st {
 //   ASN1_OBJECT *method;
@@ -322,8 +325,9 @@
 //   ASN1_INTEGER *minimum;
 //   ASN1_INTEGER *maximum;
 // } GENERAL_SUBTREE;
+typedef ossl_GENERAL_SUBTREE GENERAL_SUBTREE;
 
-// DEFINE_STACK_OF(GENERAL_SUBTREE)
+DEFINE_STACK_OF(GENERAL_SUBTREE)
 
 // struct NAME_CONSTRAINTS_st {
 //   STACK_OF(GENERAL_SUBTREE) *permittedSubtrees;
@@ -507,7 +511,7 @@
 
 // DEFINE_STACK_OF(X509_PURPOSE)
 
-// DECLARE_ASN1_FUNCTIONS_const(BASIC_CONSTRAINTS)
+DECLARE_ASN1_FUNCTIONS_const(BASIC_CONSTRAINTS)
 
 // TODO(https://crbug.com/boringssl/407): This is not const because it contains
 // an |X509_NAME|.
@@ -515,14 +519,14 @@
 
 // TODO(https://crbug.com/boringssl/407): This is not const because it contains
 // an |X509_NAME|.
-// DECLARE_ASN1_FUNCTIONS(GENERAL_NAME)
+DECLARE_ASN1_FUNCTIONS(GENERAL_NAME)
 // OPENSSL_EXPORT GENERAL_NAME *GENERAL_NAME_dup(GENERAL_NAME *a);
 
 // GENERAL_NAME_cmp returns zero if |a| and |b| are equal and a non-zero
 // value otherwise. Note this function does not provide a comparison suitable
 // for sorting.
-// OPENSSL_EXPORT int GENERAL_NAME_cmp(const GENERAL_NAME *a,
-//                                     const GENERAL_NAME *b);
+OPENSSL_EXPORT int GENERAL_NAME_cmp(const GENERAL_NAME *a,
+                                    const GENERAL_NAME *b);
 
 // i2v_GENERAL_NAME serializes |gen| as a |CONF_VALUE|. If |ret| is non-NULL, it
 // appends the value to |ret| and returns |ret| on success or NULL on error. If
@@ -540,7 +544,7 @@
 
 // TODO(https://crbug.com/boringssl/407): This is not const because it contains
 // an |X509_NAME|.
-// DECLARE_ASN1_FUNCTIONS(GENERAL_NAMES)
+DECLARE_ASN1_FUNCTIONS(GENERAL_NAMES)
 
 // i2v_GENERAL_NAMES serializes |gen| as a list of |CONF_VALUE|s. If |ret| is
 // non-NULL, it appends the values to |ret| and returns |ret| on success or NULL
@@ -561,8 +565,8 @@
 // DECLARE_ASN1_FUNCTIONS_const(OTHERNAME)
 // DECLARE_ASN1_FUNCTIONS_const(EDIPARTYNAME)
 // OPENSSL_EXPORT int OTHERNAME_cmp(OTHERNAME *a, OTHERNAME *b);
-// OPENSSL_EXPORT void GENERAL_NAME_set0_value(GENERAL_NAME *a, int type,
-//                                             void *value);
+OPENSSL_EXPORT void GENERAL_NAME_set0_value(GENERAL_NAME *a, int type,
+                                            void *value);
 // OPENSSL_EXPORT void *GENERAL_NAME_get0_value(const GENERAL_NAME *a, int *ptype);
 // OPENSSL_EXPORT int GENERAL_NAME_set0_othername(GENERAL_NAME *gen,
 //                                                ASN1_OBJECT *oid,
@@ -615,10 +619,10 @@
 // DECLARE_ASN1_ITEM(POLICY_MAPPINGS)
 
 // DECLARE_ASN1_ITEM(GENERAL_SUBTREE)
-// DECLARE_ASN1_ALLOC_FUNCTIONS(GENERAL_SUBTREE)
+DECLARE_ASN1_ALLOC_FUNCTIONS(GENERAL_SUBTREE)
 
 // DECLARE_ASN1_ITEM(NAME_CONSTRAINTS)
-// DECLARE_ASN1_ALLOC_FUNCTIONS(NAME_CONSTRAINTS)
+DECLARE_ASN1_ALLOC_FUNCTIONS(NAME_CONSTRAINTS)
 
 // DECLARE_ASN1_ALLOC_FUNCTIONS(POLICY_CONSTRAINTS)
 // DECLARE_ASN1_ITEM(POLICY_CONSTRAINTS)
@@ -875,8 +879,8 @@
 // OPENSSL_EXPORT int X509_check_issued(X509 *issuer, X509 *subject);
 // OPENSSL_EXPORT int X509_check_akid(X509 *issuer, AUTHORITY_KEYID *akid);
 
-// OPENSSL_EXPORT uint32_t X509_get_extension_flags(X509 *x);
-// OPENSSL_EXPORT uint32_t X509_get_key_usage(X509 *x);
+OPENSSL_EXPORT uint32_t X509_get_extension_flags(X509 *x);
+OPENSSL_EXPORT uint32_t X509_get_key_usage(X509 *x);
 // OPENSSL_EXPORT uint32_t X509_get_extended_key_usage(X509 *x);
 
 // X509_get0_subject_key_id returns |x509|'s subject key identifier, if present.
@@ -976,29 +980,29 @@
 // made after this point may be overwritten when the script is next run.
 
 
-// #if defined(__cplusplus)
-// }  // extern C
+#if defined(__cplusplus)
+}  // extern C
 
-// extern "C++" {
+extern "C++" {
 
-// BSSL_NAMESPACE_BEGIN
+BSSL_NAMESPACE_BEGIN
 
 // BORINGSSL_MAKE_DELETER(ACCESS_DESCRIPTION, ACCESS_DESCRIPTION_free)
 // BORINGSSL_MAKE_DELETER(AUTHORITY_KEYID, AUTHORITY_KEYID_free)
-// BORINGSSL_MAKE_DELETER(BASIC_CONSTRAINTS, BASIC_CONSTRAINTS_free)
+BORINGSSL_MAKE_DELETER(BASIC_CONSTRAINTS, BASIC_CONSTRAINTS_free)
 // TODO(davidben): Move this to conf.h and rename to CONF_VALUE_free.
 // BORINGSSL_MAKE_DELETER(CONF_VALUE, X509V3_conf_free)
 // BORINGSSL_MAKE_DELETER(DIST_POINT, DIST_POINT_free)
-// BORINGSSL_MAKE_DELETER(GENERAL_NAME, GENERAL_NAME_free)
-// BORINGSSL_MAKE_DELETER(GENERAL_SUBTREE, GENERAL_SUBTREE_free)
-// BORINGSSL_MAKE_DELETER(NAME_CONSTRAINTS, NAME_CONSTRAINTS_free)
+BORINGSSL_MAKE_DELETER(GENERAL_NAME, GENERAL_NAME_free)
+BORINGSSL_MAKE_DELETER(GENERAL_SUBTREE, GENERAL_SUBTREE_free)
+BORINGSSL_MAKE_DELETER(NAME_CONSTRAINTS, NAME_CONSTRAINTS_free)
 // BORINGSSL_MAKE_DELETER(POLICY_MAPPING, POLICY_MAPPING_free)
 // BORINGSSL_MAKE_DELETER(POLICYINFO, POLICYINFO_free)
 
-// BSSL_NAMESPACE_END
+BSSL_NAMESPACE_END
 
-// }  // extern C++
-// #endif
+}  // extern C++
+#endif
 
 #ifdef ossl_X509V3_R_BAD_IP_ADDRESS
 #define X509V3_R_BAD_IP_ADDRESS ossl_X509V3_R_BAD_IP_ADDRESS
@@ -1196,4 +1200,4 @@
 #define X509V3_R_TRAILING_DATA_IN_EXTENSION ossl_X509V3_R_TRAILING_DATA_IN_EXTENSION
 #endif
 
-// #endif
+#endif
