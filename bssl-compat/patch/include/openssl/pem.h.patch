--- a/include/openssl/pem.h
+++ b/include/openssl/pem.h
@@ -54,53 +54,53 @@
  * copied and put under another distribution licence
  * [including the GNU Public Licence.] */
 
-// #ifndef OPENSSL_HEADER_PEM_H
-// #define OPENSSL_HEADER_PEM_H
+#ifndef OPENSSL_HEADER_PEM_H
+#define OPENSSL_HEADER_PEM_H
 
-// #include <openssl/base64.h>
-// #include <openssl/bio.h>
-// #include <openssl/cipher.h>
-// #include <openssl/digest.h>
-// #include <openssl/evp.h>
-// #include <openssl/pkcs7.h>
-// #include <openssl/stack.h>
-// #include <openssl/x509.h>
+#include <openssl/base64.h>
+#include <openssl/bio.h>
+#include <openssl/cipher.h>
+#include <openssl/digest.h>
+#include <openssl/evp.h>
+#include <openssl/pkcs7.h>
+#include <openssl/stack.h>
+#include <openssl/x509.h>
 
 // For compatibility with open-iscsi, which assumes that it can get
 // |OPENSSL_malloc| from pem.h or err.h
-// #include <openssl/crypto.h>
+#include <openssl/crypto.h>
 
-// #ifdef __cplusplus
-// extern "C" {
-// #endif
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 
 // #define PEM_BUFSIZE 1024
 
-// #define PEM_STRING_X509_OLD "X509 CERTIFICATE"
-// #define PEM_STRING_X509 "CERTIFICATE"
-// #define PEM_STRING_X509_PAIR "CERTIFICATE PAIR"
-// #define PEM_STRING_X509_TRUSTED "TRUSTED CERTIFICATE"
-// #define PEM_STRING_X509_REQ_OLD "NEW CERTIFICATE REQUEST"
-// #define PEM_STRING_X509_REQ "CERTIFICATE REQUEST"
-// #define PEM_STRING_X509_CRL "X509 CRL"
-// #define PEM_STRING_EVP_PKEY "ANY PRIVATE KEY"
-// #define PEM_STRING_PUBLIC "PUBLIC KEY"
-// #define PEM_STRING_RSA "RSA PRIVATE KEY"
-// #define PEM_STRING_RSA_PUBLIC "RSA PUBLIC KEY"
-// #define PEM_STRING_DSA "DSA PRIVATE KEY"
-// #define PEM_STRING_DSA_PUBLIC "DSA PUBLIC KEY"
-// #define PEM_STRING_EC "EC PRIVATE KEY"
-// #define PEM_STRING_PKCS7 "PKCS7"
-// #define PEM_STRING_PKCS7_SIGNED "PKCS #7 SIGNED DATA"
-// #define PEM_STRING_PKCS8 "ENCRYPTED PRIVATE KEY"
-// #define PEM_STRING_PKCS8INF "PRIVATE KEY"
-// #define PEM_STRING_DHPARAMS "DH PARAMETERS"
-// #define PEM_STRING_SSL_SESSION "SSL SESSION PARAMETERS"
-// #define PEM_STRING_DSAPARAMS "DSA PARAMETERS"
-// #define PEM_STRING_ECDSA_PUBLIC "ECDSA PUBLIC KEY"
-// #define PEM_STRING_ECPRIVATEKEY "EC PRIVATE KEY"
-// #define PEM_STRING_CMS "CMS"
+#define PEM_STRING_X509_OLD "X509 CERTIFICATE"
+#define PEM_STRING_X509 "CERTIFICATE"
+#define PEM_STRING_X509_PAIR "CERTIFICATE PAIR"
+#define PEM_STRING_X509_TRUSTED "TRUSTED CERTIFICATE"
+#define PEM_STRING_X509_REQ_OLD "NEW CERTIFICATE REQUEST"
+#define PEM_STRING_X509_REQ "CERTIFICATE REQUEST"
+#define PEM_STRING_X509_CRL "X509 CRL"
+#define PEM_STRING_EVP_PKEY "ANY PRIVATE KEY"
+#define PEM_STRING_PUBLIC "PUBLIC KEY"
+#define PEM_STRING_RSA "RSA PRIVATE KEY"
+#define PEM_STRING_RSA_PUBLIC "RSA PUBLIC KEY"
+#define PEM_STRING_DSA "DSA PRIVATE KEY"
+#define PEM_STRING_DSA_PUBLIC "DSA PUBLIC KEY"
+#define PEM_STRING_EC "EC PRIVATE KEY"
+#define PEM_STRING_PKCS7 "PKCS7"
+#define PEM_STRING_PKCS7_SIGNED "PKCS #7 SIGNED DATA"
+#define PEM_STRING_PKCS8 "ENCRYPTED PRIVATE KEY"
+#define PEM_STRING_PKCS8INF "PRIVATE KEY"
+#define PEM_STRING_DHPARAMS "DH PARAMETERS"
+#define PEM_STRING_SSL_SESSION "SSL SESSION PARAMETERS"
+#define PEM_STRING_DSAPARAMS "DSA PARAMETERS"
+#define PEM_STRING_ECDSA_PUBLIC "ECDSA PUBLIC KEY"
+#define PEM_STRING_ECPRIVATEKEY "EC PRIVATE KEY"
+#define PEM_STRING_CMS "CMS"
 
 // enc_type is one off
 // #define PEM_TYPE_ENCRYPTED 10
@@ -250,67 +250,67 @@
 
 // These are the same except they are for the declarations
 
-// #define DECLARE_PEM_read_fp(name, type)                    \
-//   OPENSSL_EXPORT type *PEM_read_##name(FILE *fp, type **x, \
-//                                        pem_password_cb *cb, void *u);
+#define DECLARE_PEM_read_fp(name, type)                    \
+  OPENSSL_EXPORT type *PEM_read_##name(FILE *fp, type **x, \
+                                       pem_password_cb *cb, void *u);
 
-// #define DECLARE_PEM_write_fp(name, type) \
-//   OPENSSL_EXPORT int PEM_write_##name(FILE *fp, type *x);
+#define DECLARE_PEM_write_fp(name, type) \
+  OPENSSL_EXPORT int PEM_write_##name(FILE *fp, type *x);
 
 // #define DECLARE_PEM_write_fp_const(name, type) \
 //   OPENSSL_EXPORT int PEM_write_##name(FILE *fp, const type *x);
 
-// #define DECLARE_PEM_write_cb_fp(name, type)                                    \
-//   OPENSSL_EXPORT int PEM_write_##name(                                         \
-//       FILE *fp, type *x, const EVP_CIPHER *enc, unsigned char *kstr, int klen, \
-//       pem_password_cb *cb, void *u);
-
-// #define DECLARE_PEM_read_bio(name, type)                      \
-//   OPENSSL_EXPORT type *PEM_read_bio_##name(BIO *bp, type **x, \
-//                                            pem_password_cb *cb, void *u);
+#define DECLARE_PEM_write_cb_fp(name, type)                                    \
+  OPENSSL_EXPORT int PEM_write_##name(                                         \
+      FILE *fp, type *x, const EVP_CIPHER *enc, unsigned char *kstr, int klen, \
+      pem_password_cb *cb, void *u);
+
+#define DECLARE_PEM_read_bio(name, type)                      \
+  OPENSSL_EXPORT type *PEM_read_bio_##name(BIO *bp, type **x, \
+                                           pem_password_cb *cb, void *u);
 
-// #define DECLARE_PEM_write_bio(name, type) \
-//   OPENSSL_EXPORT int PEM_write_bio_##name(BIO *bp, type *x);
+#define DECLARE_PEM_write_bio(name, type) \
+  OPENSSL_EXPORT int PEM_write_bio_##name(BIO *bp, type *x);
 
 // #define DECLARE_PEM_write_bio_const(name, type) \
 //   OPENSSL_EXPORT int PEM_write_bio_##name(BIO *bp, const type *x);
 
-// #define DECLARE_PEM_write_cb_bio(name, type)                                  \
-//   OPENSSL_EXPORT int PEM_write_bio_##name(                                    \
-//       BIO *bp, type *x, const EVP_CIPHER *enc, unsigned char *kstr, int klen, \
-//       pem_password_cb *cb, void *u);
+#define DECLARE_PEM_write_cb_bio(name, type)                                  \
+  OPENSSL_EXPORT int PEM_write_bio_##name(                                    \
+      BIO *bp, type *x, const EVP_CIPHER *enc, unsigned char *kstr, int klen, \
+      pem_password_cb *cb, void *u);
 
 
-// #define DECLARE_PEM_write(name, type) \
-//   DECLARE_PEM_write_bio(name, type)   \
-//   DECLARE_PEM_write_fp(name, type)
+#define DECLARE_PEM_write(name, type) \
+  DECLARE_PEM_write_bio(name, type)   \
+  DECLARE_PEM_write_fp(name, type)
 
 // #define DECLARE_PEM_write_const(name, type) \
 //   DECLARE_PEM_write_bio_const(name, type)   \
 //   DECLARE_PEM_write_fp_const(name, type)
 
-// #define DECLARE_PEM_write_cb(name, type) \
-//   DECLARE_PEM_write_cb_bio(name, type)   \
-//   DECLARE_PEM_write_cb_fp(name, type)
-
-// #define DECLARE_PEM_read(name, type) \
-//   DECLARE_PEM_read_bio(name, type)   \
-//   DECLARE_PEM_read_fp(name, type)
-
-// #define DECLARE_PEM_rw(name, type) \
-//   DECLARE_PEM_read(name, type)     \
-//   DECLARE_PEM_write(name, type)
+#define DECLARE_PEM_write_cb(name, type) \
+  DECLARE_PEM_write_cb_bio(name, type)   \
+  DECLARE_PEM_write_cb_fp(name, type)
+
+#define DECLARE_PEM_read(name, type) \
+  DECLARE_PEM_read_bio(name, type)   \
+  DECLARE_PEM_read_fp(name, type)
+
+#define DECLARE_PEM_rw(name, type) \
+  DECLARE_PEM_read(name, type)     \
+  DECLARE_PEM_write(name, type)
 
 // #define DECLARE_PEM_rw_const(name, type) \
 //   DECLARE_PEM_read(name, type)           \
 //   DECLARE_PEM_write_const(name, type)
 
-// #define DECLARE_PEM_rw_cb(name, type) \
-//   DECLARE_PEM_read(name, type)        \
-//   DECLARE_PEM_write_cb(name, type)
+#define DECLARE_PEM_rw_cb(name, type) \
+  DECLARE_PEM_read(name, type)        \
+  DECLARE_PEM_write_cb(name, type)
 
 // "userdata": new with OpenSSL 0.9.4
-// typedef int pem_password_cb(char *buf, int size, int rwflag, void *userdata);
+typedef int pem_password_cb(char *buf, int size, int rwflag, void *userdata);
 
 // OPENSSL_EXPORT int PEM_get_EVP_CIPHER_INFO(char *header,
 //                                            EVP_CIPHER_INFO *cipher);
@@ -336,9 +336,9 @@
 // OPENSSL_EXPORT int PEM_write_bio(BIO *bp, const char *name, const char *hdr,
 //                                  const unsigned char *data, long len);
 
-// OPENSSL_EXPORT int PEM_bytes_read_bio(unsigned char **pdata, long *plen,
-//                                       char **pnm, const char *name, BIO *bp,
-//                                       pem_password_cb *cb, void *u);
+OPENSSL_EXPORT int PEM_bytes_read_bio(unsigned char **pdata, long *plen,
+                                      char **pnm, const char *name, BIO *bp,
+                                      pem_password_cb *cb, void *u);
 // OPENSSL_EXPORT void *PEM_ASN1_read_bio(d2i_of_void *d2i, const char *name,
 //                                        BIO *bp, void **x, pem_password_cb *cb,
 //                                        void *u);
@@ -347,8 +347,8 @@
 //                                       unsigned char *kstr, int klen,
 //                                       pem_password_cb *cb, void *u);
 
-// OPENSSL_EXPORT STACK_OF(X509_INFO) *PEM_X509_INFO_read_bio(
-//     BIO *bp, STACK_OF(X509_INFO) *sk, pem_password_cb *cb, void *u);
+OPENSSL_EXPORT STACK_OF(X509_INFO) *PEM_X509_INFO_read_bio(
+    BIO *bp, STACK_OF(X509_INFO) *sk, pem_password_cb *cb, void *u);
 // OPENSSL_EXPORT int PEM_X509_INFO_write_bio(BIO *bp, X509_INFO *xi,
 //                                            EVP_CIPHER *enc, unsigned char *kstr,
 //                                            int klen, pem_password_cb *cd,
@@ -381,7 +381,7 @@
 //                                  char *str);
 
 
-// DECLARE_PEM_rw(X509, X509)
+DECLARE_PEM_rw(X509, X509)
 
 // DECLARE_PEM_rw(X509_AUX, X509)
 
@@ -395,7 +395,7 @@
 
 // DECLARE_PEM_rw(PKCS8_PRIV_KEY_INFO, PKCS8_PRIV_KEY_INFO)
 
-// DECLARE_PEM_rw_cb(RSAPrivateKey, RSA)
+DECLARE_PEM_rw_cb(RSAPrivateKey, RSA)
 
 // DECLARE_PEM_rw_const(RSAPublicKey, RSA)
 // DECLARE_PEM_rw(RSA_PUBKEY, RSA)
@@ -417,7 +417,7 @@
 // DECLARE_PEM_rw_const(DHparams, DH)
 
 
-// DECLARE_PEM_rw_cb(PrivateKey, EVP_PKEY)
+DECLARE_PEM_rw_cb(PrivateKey, EVP_PKEY)
 
 // DECLARE_PEM_rw(PUBKEY, EVP_PKEY)
 
@@ -460,9 +460,9 @@
 //                                              void *u);
 
 
-// #ifdef __cplusplus
-// }
-// #endif
+#ifdef __cplusplus
+}
+#endif
 
 #ifdef ossl_PEM_R_BAD_BASE64_DECODE
 #define PEM_R_BAD_BASE64_DECODE ossl_PEM_R_BAD_BASE64_DECODE
@@ -510,4 +510,4 @@
 #define PEM_R_UNSUPPORTED_ENCRYPTION ossl_PEM_R_UNSUPPORTED_ENCRYPTION
 #endif
 
-// #endif  // OPENSSL_HEADER_PEM_H
+#endif  // OPENSSL_HEADER_PEM_H
