--- a/include/openssl/ex_data.h
+++ b/include/openssl/ex_data.h
@@ -106,16 +106,16 @@
  * (eay@cryptsoft.com).  This product includes software written by Tim
  * Hudson (tjh@cryptsoft.com). */
 
-// #ifndef OPENSSL_HEADER_EX_DATA_H
-// #define OPENSSL_HEADER_EX_DATA_H
+#ifndef OPENSSL_HEADER_EX_DATA_H
+#define OPENSSL_HEADER_EX_DATA_H
 
-// #include <openssl/base.h>
+#include <openssl/base.h>
 
-// #include <openssl/stack.h>
+#include <openssl/stack.h>
 
-// #if defined(__cplusplus)
-// extern "C" {
-// #endif
+#if defined(__cplusplus)
+extern "C" {
+#endif
 
 
 // ex_data is a mechanism for associating arbitrary extra data with objects.
@@ -125,7 +125,7 @@
 // duplicated.
 
 
-// typedef struct crypto_ex_data_st CRYPTO_EX_DATA;
+typedef ossl_CRYPTO_EX_DATA CRYPTO_EX_DATA;
 
 
 // Type-specific functions.
@@ -171,8 +171,8 @@
 // This callback may be called with a NULL value for |ptr| if |parent| has no
 // value set for this index. However, the callbacks may also be skipped entirely
 // if no extra data pointers are set on |parent| at all.
-// typedef void CRYPTO_EX_free(void *parent, void *ptr, CRYPTO_EX_DATA *ad,
-//                             int index, long argl, void *argp);
+typedef void CRYPTO_EX_free(void *parent, void *ptr, CRYPTO_EX_DATA *ad,
+                            int index, long argl, void *argp);
 
 
 // Deprecated functions.
@@ -181,23 +181,23 @@
 // OPENSSL_EXPORT void CRYPTO_cleanup_all_ex_data(void);
 
 // CRYPTO_EX_dup is a legacy callback function type which is ignored.
-// typedef int CRYPTO_EX_dup(CRYPTO_EX_DATA *to, const CRYPTO_EX_DATA *from,
-//                           void **from_d, int index, long argl, void *argp);
+typedef int CRYPTO_EX_dup(CRYPTO_EX_DATA *to, const CRYPTO_EX_DATA *from,
+                          void **from_d, int index, long argl, void *argp);
 
 
 // Private structures.
 
 // CRYPTO_EX_unused is a placeholder for an unused callback. It is aliased to
 // int to ensure non-NULL callers fail to compile rather than fail silently.
-// typedef int CRYPTO_EX_unused;
+typedef int CRYPTO_EX_unused;
 
 // struct crypto_ex_data_st {
 //   STACK_OF(void) *sk;
 // };
 
 
-// #if defined(__cplusplus)
-// }  // extern C
-// #endif
+#if defined(__cplusplus)
+}  // extern C
+#endif
 
-// #endif  // OPENSSL_HEADER_EX_DATA_H
+#endif  // OPENSSL_HEADER_EX_DATA_H
